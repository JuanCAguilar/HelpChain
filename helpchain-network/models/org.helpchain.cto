/**
 * Write your model definitions here
 */

namespace org.helpchain



//Enumeraciones y conceptos



//Tipos de personas
enum TipoPers{
  o FISICA
  o MORAL
}

//Tipos de reguladores
enum TipoReg{
  o GOBIERNO
  o ENTIDAD
}

//Tipo de Solicitante
enum TipoSol{
  o INDIVIDUAL
  o COMUNIDAD
  o ORGANIZACION
}

enum Causa{
  o DESASTRES
  o VIVIENDAS
  o EDUCACION
  o SALUD
}

//Distintos estados que puede tener un donativo
enum EstadoDonativo{
  o POR_ASIGNAR
  o POR_ENTREGAR
  o ENTREGADOS
  o POR_REUTILIZAR
}

//Distintos estados que puede tener una cadena
enum EstadoCadena{
  o EN_REVISION
  o VALIDA
  o ACTIVA
  o COMPLETADA
  o ROTA
}

//Estado de la cadena dependiendo del cumplimiento del solicitante
enum EstadoCumplimiento{
  o VERDE
  o AMARILLO
  o ROJO
}


//Regla general para una meta. Primer eslabon no puede superar el mes ni el 50% de la recaudacion 
abstract concept Meta{
  o Integer duracionPrimerEslabon default=1 range=[1,30]
  o Integer porcentajePrimerEslabon default=10 range=[10,50]
}

//Opciones de meta corta
concept MetaCorta extends Meta{
  o Integer duracionEslabones default=1 range=[1,30]
  o Integer numEslabones default=1 range=[1,2]
  o Integer porcentajeEslabones default=90 range=[50,90]
}

//Opciones de meta larga
concept MetaLarga extends Meta{
  o Integer duracionEslabones default=1 range=[1,60]
  o Integer numEslabones default=3 range=[3,5]
  o Integer porcentajeEslabones default=30 range=[10,30]
}


//Activos


asset Donativo identified by donativoID {
  o String donativoID
  o Double monto
  o EstadoDonativo estado
  --> Usuario aportante
  --> Cadena cadena
}

asset Cadena identified by cadID {
  o String cadID
  o Causa causa
  o EstadoCadena estCad
  o EstadoCumplimiento estCump
  --> Usuario solicitante
}


//Participantes

abstract participant Usuario{
  o String alias optional
  o String nombre
}

participant Aportante identified by aportanteID extends Usuario {
  o String aportanteID
  o TipoPers tipo
  o Boolean recibo
  o Double Saldo
  o Donativo[] donaciones
}

participant Solicitante identified by solicitanteID extends Usuario {
  o String solicitanteID
  o TipoSol tipo
  o Cadena[] proyectos
}

participant Regulador identified by reguladorID extends Usuario {
  o String reguladorID
  o TipoReg tipo
  }

participant Operador identified by operadorID extends Usuario {
  o String operadorID
}



//Transacciones


abstract transaction transferencia {
  o String usuarioID
}

transaction CrearSolicitud extends transferencia{
  o Causa causa
  --> Usuario solicitante
}

transaction Donar extends transferencia{
  o Double monto
  --> Usuario aportante
  --> Cadena cadena
}

transaction AgregarSaldo extends transferencia{
    o Double saldo
  --> Usuario aportante
}

transaction ValidarProyecto extends transferencia {
  --> Usuario solicitante
}



//Eventos


event getSolicitud {
  o String detail
}

event getDonacion {
  o String detail
}

event getSaldo {
  o String detail
}



















//Autogenerado


participant SampleParticipant identified by participantId {
  o String participantId
  o String firstName
  o String lastName
}

asset SampleAsset identified by assetId {
  o String assetId
  --> SampleParticipant owner
  o String value
}

transaction SampleTransaction {
  --> SampleAsset asset
  o String newValue
}

event SampleEvent {
  --> SampleAsset asset
  o String oldValue
  o String newValue
}
